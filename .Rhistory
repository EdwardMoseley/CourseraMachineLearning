library("ggplot2")
detach(sph)
ns1one <- read.csv("/Users/Edward/Desktop/BarouchLab/ZMFM NS1 ELISA data 25Jan17.csv", header = T, stringsAsFactors = F)
##
# Standard Curve
##
cals <- c(200, 20, 2)
noms <- c("C3", "C2", "C1")
vals <- rev(ns1one[ns1one$ID == (noms),]$OD)
stdCurve <- cbind(cals, vals)
cal2 <- ns1one[(ns1one$ID == "C2"),]$OD
ns1one$Relative_Ratio <- ns1one$OD/cal2
colnames(ns1one)[2] <- "Patient_ID"
#ns1one <- ns1one[rev(rownames(ns1one)),]
#ns1one <- ns1one[6:nrow(ns1one),]
attach(ns1one)
d <- ggplot(ns1one, aes(Patient_ID, Relative_Ratio)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=0.8), colour = "#990000", linetype="dashed", size = 1.5) + labs(title = "EUROIMMUN ZIKV NS1 Semi-Quantitative ELISA Screen", x = "Patient Label", y = "Relative Ratio") + coord_cartesian(ylim=c(0,3.5))
d
d <- ggplot(ns1one, aes(Patient_ID, Relative_Ratio)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=0.8), colour = "#990000", linetype="dashed", size = 1.5) + labs(title = "EUROIMMUN ZIKV NS1 Semi-Quantitative ELISA Screen", x = "Patient Label", y = "Relative Ratio") + coord_cartesian(ylim=c(0,3.5)) + element_text(face = "bold", color = "black", size = 12)
d
d <- ggplot(ns1one, aes(Patient_ID, Relative_Ratio)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=0.8), colour = "#990000", linetype="dashed", size = 1.5) + labs(title = "EUROIMMUN ZIKV NS1 Semi-Quantitative ELISA Screen", x = "Patient Label", y = "Relative Ratio") + coord_cartesian(ylim=c(0,3.5)) + theme(axis.text.x = element_text(face = "bold", color = "black", size = 12))
d
ns1one
ns1one <- ns1one[1:12,]
attach(ns1one)
d <- ggplot(ns1one, aes(Patient_ID, Relative_Ratio)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=0.8), colour = "#990000", linetype="dashed", size = 1.5) + labs(title = "EUROIMMUN ZIKV NS1 Semi-Quantitative ELISA Screen", x = "Patient Label", y = "Relative Ratio") + coord_cartesian(ylim=c(0,3.5)) + theme(axis.text.x = element_text(face = "bold", color = "black", size = 12))
d
library('xtable')
library('ggplot2')
serialDilute <- function(conc, i){
con <- conc
curve <- vector()
curve[length(curve)+1] <- con
j <- 1
while (j < i){
con <- ((con*50)/100)
curve[length(curve)+1] <- con
j <- j + 1
}
return(curve)
}
dil <- -log10(serialDilute(6/150, 8))
dil
ns1one <- read.csv("/Users/Edward/Desktop/BarouchLab/ZMFM NS1 ELISA data 25Jan17.csv", header = T, stringsAsFactors = F)
ns1one
cals <- c(200, 20, 2)
cals
noms <- c("C3", "C2", "C1")
vals <- rev(ns1one[ns1one$ID == (noms),]$OD)
vals
stdCurve <- cbind(cals, vals)
stdCurve
plot(stdCurve$vals ~ stdCurve$cals, type = 'l')
attach(stdCurve)
str(stdCurve)
stdCurve <- as.data.frame(cbind(cals, vals))
stdCurve
plot(stdCurve$vals ~ stdCurve$cals, type = 'l')
cal2 <- ns1one[(ns1one$ID == "C2"),]$OD
cal2
ns1one$OD
ns1one$OD/cal2
length(ns1one$OD)
length(ns1one$OD/cal2)
colnames(ns1one)[2] <- "Patient_ID"
ns1one
ns1one[1:12,1 ]
ns1one <- ns1one[1:12, ]
ns1one
attach(ns1one)
OD
ns1one$OD
ns1one$Relative_Ratio <- ns1one$OD/cal2
d <- ggplot(ns1one, aes(Patient_ID, Relative_Ratio))
d
d <- geom_bar(stat = "identity")
d
d <- geom_bar(stat = "identity") + geom_hline(aes(yintercept=0.8), color = "#990000", linetype"dashed", size = 1.5)
d
d <- ggplot(ns1one, aes(Patient_ID, Relative_Ratio)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=0.8), colour = "#990000", linetype="dashed", size = 1.5)
d
d <- ggplot(ns1one, aes(Patient_ID, Relative_Ratio)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=0.8), colour = "#990000", linetype="dashed", size = 1.5) + labs(title = "EUROIMMUN ZIKV NS1 Semi-Quantitative ELISA Screen", x = "Patient Label", y = "Relative Ratio")
d
d <- ggplot(ns1one, aes(Patient_ID, Relative_Ratio)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=0.8), colour = "#990000", linetype="dashed", size = 1.5) + labs(title = "EUROIMMUN ZIKV NS1 Semi-Quantitative ELISA Screen", x = "Patient Label", y = "Relative Ratio") + coord_cartesian(ylim=c(0,3.5))
d
d <- ggplot(ns1one, aes(Patient_ID, Relative_Ratio)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=0.8), colour = "#990000", linetype="dashed", size = 1.5) + labs(title = "EUROIMMUN ZIKV NS1 Semi-Quantitative ELISA Screen", x = "Patient Label", y = "Relative Ratio") + coord_cartesian(ylim=c(0,3.5)) + theme(axis.text.x = element_text(face = "bold", color = "black", size = 12))
d
#23Dec16
sph <- data.frame(c("P9", "P9 Inf", "P10", "P11", "P12", "P13", "P8 Inf V5", "P8 Inf V6", "P9 Inf V2", "P12 AF", "Positive", "Negative"),
c("1:6075", "1:6075", "1:225", "No Response", "1:75", "1:25", "1:6075", "1:6075", "1:6075", "No Response", "NA", "NA"),
c(dil[6], dil[6], dil[3], 0, dil[2], dil[1], dil[6], dil[6], dil[6], 0, 0, dil[2]))
colnames(sph) <- c("Patient_ID", "Env_Titer", "Log_Titer")
sph[,3] <- round(as.numeric(sph[,3]), 3)
attach(sph)
neg <- dil[2]
sph <- sph[1:(nrow(sph)-2),]
d <- ggplot(sph, aes(Patient_ID, Log_Titer)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=min(neg)), colour = "#990000", linetype="dashed", size = 1.5) + geom_text(aes(label=Env_Titer), vjust=-0.5) + labs(title = "ZIKV Env (Strain: SPH2015) Titers", x = "Patient Label", y = "Log Titer") + coord_cartesian(ylim=c(1,4))
d
27Jan <- as.data.frame(cbind(c("Pt14V1", "Pt02V3", "Pt03V3", "Pt03V3Inf", "Pt12V3", "Pt10V2", "Pt10V2Inf", "Pt14V2", "Pt14V2Inf", "Pt01V2", "Positive", "Negative"),
c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "NA", "NA")),
c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[7], dil[2]))
27Jan <- as.data.frame(cbind(c("Pt14V1", "Pt02V3", "Pt03V3", "Pt03V3Inf", "Pt12V3", "Pt10V2", "Pt10V2Inf", "Pt14V2", "Pt14V2Inf", "Pt01V2", "Positive", "Negative"),
c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "NA", "NA"),
c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[7], dil[2])))
27Jan <- as.data.frame(cbind(c("Pt14V1", "Pt02V3", "Pt03V3", "Pt03V3Inf", "Pt12V3", "Pt10V2", "Pt10V2Inf", "Pt14V2", "Pt14V2Inf", "Pt01V2", "Positive", "Negative"),
c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "NA", "NA"),
c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[7], dil[2]))
c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[7], dil[2])
c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "NA", "NA")
27Jan <- as.data.frame(cbind(c("Pt14V1", "Pt02V3", "Pt03V3", "Pt03V3Inf", "Pt12V3", "Pt10V2", "Pt10V2Inf", "Pt14V2", "Pt14V2Inf", "Pt01V2", "Positive", "Negative"),
c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "1:18225", "1:75"),
c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[7], dil[2])
27Jan <- as.data.frame(cbind(c("Pt14V1", "Pt02V3", "Pt03V3", "Pt03V3Inf", "Pt12V3", "Pt10V2", "Pt10V2Inf", "Pt14V2", "Pt14V2Inf", "Pt01V2", "Positive", "Negative"),
c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "1:18225", "1:75"),
c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[7], dil[2])
27Jan <- as.data.frame(cbind(c("Pt14V1", "Pt02V3", "Pt03V3", "Pt03V3Inf", "Pt12V3", "Pt10V2", "Pt10V2Inf", "Pt14V2", "Pt14V2Inf", "Pt01V2", "Positive", "Negative"),
c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "1:18225", "1:75"),
c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[7], dil[2])
twosevenjan <- as.data.frame(cbind(c("Pt14V1", "Pt02V3", "Pt03V3", "Pt03V3Inf", "Pt12V3", "Pt10V2", "Pt10V2Inf", "Pt14V2", "Pt14V2Inf", "Pt01V2", "Positive", "Negative"),
c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "1:18225", "1:75"),
c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[7], dil[2])
)
)
27Jan <- as.data.frame(cbind(c("Pt14V1", "Pt02V3", "Pt03V3", "Pt03V3Inf", "Pt12V3", "Pt10V2", "Pt10V2Inf", "Pt14V2", "Pt14V2Inf", "Pt01V2", "Positive", "Negative"),
c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "1:18225", "1:75"),
c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[1],dil[7], dil[2])))
frame
dat <- as.data.frame(cbind(c("Pt14V1", "Pt02V3", "Pt03V3", "Pt03V3Inf", "Pt12V3", "Pt10V2", "Pt10V2Inf", "Pt14V2", "Pt14V2Inf", "Pt01V2", "Positive", "Negative"),
c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "1:18225", "1:75"),
c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[1],dil[7], dil[2])))
dat
colnames(sph) <- c("Patient_ID", "Env_Titer", "Log_Titer")
sph
sph <- as.data.frame(cbind(c("Pt14V1", "Pt02V3", "Pt03V3", "Pt03V3Inf", "Pt12V3", "Pt10V2", "Pt10V2Inf", "Pt14V2", "Pt14V2Inf", "Pt01V2", "Positive", "Negative"),
c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "1:18225", "1:75"),
c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[1],dil[7], dil[2])))
colnames(sph) <- c("Patient_ID", "Env_Titer", "Log_Titer")
sph[,3] <- round(as.numeric(sph[,3]), 3)
sph
sph <- as.data.frame(cbind(c("Pt14V1", "Pt02V3", "Pt03V3", "Pt03V3Inf", "Pt12V3", "Pt10V2", "Pt10V2Inf", "Pt14V2", "Pt14V2Inf", "Pt01V2", "Positive", "Negative"),
c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "1:18225", "1:75"),
c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[1],dil[7], dil[2])))
colnames(sph) <- c("Patient_ID", "Env_Titer", "Log_Titer")
sph
sph[(sph$Patient_ID == "Negative"),]$Log_Titer
sph[(sph$Patient_ID == "Negative")]$Log_Titer
sph[,(sph$Patient_ID == "Negative")]$Log_Titer
(sph$Patient_ID == "Negative")$Log_Titer
sph[(sph$Patient_ID == "Negative"),3]
sph[(sph$Patient_ID == "Negative"),3][1]
sph[(sph$Patient_ID == "Negative"),]$Log_Titer[1]
d <- ggplot(sph, aes(Patient_ID, Log_Titer)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=sph[(sph$Patient_ID == "Negative"),]$Log_Titer), colour = "#990000", linetype="dashed", size = 1.5) + geom_text(aes(label=Env_Titer), vjust=-0.5) + labs(title = "ZIKV Env (Strain: SPH2015) Titers", x = "Patient Label", y = "Log Titer") + coord_cartesian(ylim=c(1,4))
d
sph <- data.frame(cbind(c("Pt14V1", "Pt02V3", "Pt03V3", "Pt03V3Inf", "Pt12V3", "Pt10V2", "Pt10V2Inf", "Pt14V2", "Pt14V2Inf", "Pt01V2", "Positive", "Negative"),
c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "1:18225", "1:75"),
c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[1],dil[7], dil[2])))
colnames(sph) <- c("Patient_ID", "Env_Titer", "Log_Titer")
sph[(sph$Patient_ID == "Negative"),]$Log_Titer[1]
str(sph)
sph <- data.frame(cbind(as.character(c("Pt14V1", "Pt02V3", "Pt03V3", "Pt03V3Inf", "Pt12V3", "Pt10V2", "Pt10V2Inf", "Pt14V2", "Pt14V2Inf", "Pt01V2", "Positive", "Negative")),
as.character(c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "1:18225", "1:75")),
as.numeric(c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[1],dil[7], dil[2]))))
sph
str(sph)
sph <- data.frame(cbind(as.character(c("Pt14V1", "Pt02V3", "Pt03V3", "Pt03V3Inf", "Pt12V3", "Pt10V2", "Pt10V2Inf", "Pt14V2", "Pt14V2Inf", "Pt01V2", "Positive", "Negative")),
as.character(c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "1:18225", "1:75")),
as.numeric(c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[1],dil[7], dil[2]))), stringsAsFactors = FALSE)
sph
str(sph)
sph <- data.frame(cbind(c("Pt14V1", "Pt02V3", "Pt03V3", "Pt03V3Inf", "Pt12V3", "Pt10V2", "Pt10V2Inf", "Pt14V2", "Pt14V2Inf", "Pt01V2", "Positive", "Negative"),
c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "1:18225", "1:75"),
c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[1],dil[7], dil[2])), stringsAsFactors = FALSE)
sph
str(sph)
colnames(sph) <- c("Patient_ID", "Env_Titer", "Log_Titer")
sph$Log_Titer <- as.numeric(sph$Log_Titer)
sph
d <- ggplot(sph, aes(Patient_ID, Log_Titer)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=sph[(sph$Patient_ID == "Negative"),]$Log_Titer), colour = "#990000", linetype="dashed", size = 1.5) + geom_text(aes(label=Env_Titer), vjust=-0.5) + labs(title = "ZIKV Env (Strain: SPH2015) Titers", x = "Patient Label", y = "Log Titer") + coord_cartesian(ylim=c(1,4))
d
d <- ggplot(sph, aes(Patient_ID, Log_Titer)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=sph[(sph$Patient_ID == "Negative"),]$Log_Titer), colour = "#990000", linetype="dashed", size = 1.5) + geom_text(aes(label=Env_Titer), vjust=-0.5) + labs(title = "ZIKV Env (Strain: SPH2015) Titers", x = "Patient Label", y = "Log Titer") + coord_cartesian(ylim=c(1,4)) + theme(axis.text.x = element_text(face = "bold", color = "black", size = 12))
d
sph <- data.frame(cbind(c("P1", "P2", "P3", "P4", "P5", "P6", "P7", "P8", "P8 Inf V1", "P8 Inf V2", "Positive", "Negative"),
c("1:25", "1:18225", "1:2025", "1:6075", "1:25", "1:225", "1:6075", "1:18225", "1:6075", "1:6075", "NA", "NA"),
c(dil[1], dil[7], dil[5], dil[6], dil[1], dil[3], dil[6], dil[7], dil[6], dil[6], 0, 0)), stringsAsFactors = FALSE)
colnames(sph) <- c("Patient_ID", "Env_Titer", "Log_Titer")
sph[,3] <- as.numeric(sph[,3])
sph
sph <- data.frame(cbind(c("P1", "P2", "P3", "P4", "P5", "P6", "P7", "P8", "P8 Inf V1", "P8 Inf V2", "Positive", "Negative"),
c("1:25", "1:18225", "1:2025", "1:6075", "1:25", "1:225", "1:6075", "1:18225", "1:6075", "1:6075", "NA", "NA"),
c(dil[1], dil[7], dil[5], dil[6], dil[1], dil[3], dil[6], dil[7], dil[6], dil[6], 0, 0)), stringsAsFactors = FALSE)
colnames(sph) <- c("Patient_ID", "Env_Titer", "Log_Titer")
sph[,3] <- as.numeric(sph[,3])
attach(sph)
d <- ggplot(sph, aes(Patient_ID, Log_Titer)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=min(sph$Log_Titer)), colour = "#990000", linetype="dashed", size = 1.5) + geom_text(aes(label=Env_Titer), vjust=-0.5) + labs(title = "ZIKV Env (Strain: SPH2015) Titers", x = "Patient Label", y = "Log Titer") + coord_cartesian(ylim=c(1,4)) + theme(axis.text.x = element_text(face = "bold", color = "black", size = 12))
d
detach(sph)
detach(list = ls())
sph <- data.frame(cbind(c("Pt1", "Pt2", "Pt3", "Pt4", "Pt5", "Pt6", "Pt7", "Pt8", "Pt8InfV1", "Pt8InfV2", "Positive", "Negative"),
c("1:25", "1:18225", "1:2025", "1:6075", "1:25", "1:225", "1:6075", "1:18225", "1:6075", "1:6075", "1:18225", "1:25"),
c(dil[1], dil[7], dil[5], dil[6], dil[1], dil[3], dil[6], dil[7], dil[6], dil[6], dil[7], dil[1])), stringsAsFactors = FALSE)
colnames(sph) <- c("Patient_ID", "Env_Titer", "Log_Titer")
sph[,3] <- as.numeric(sph[,3])
attach(sph)
detach(ns1one)
attach(sph)
d <- ggplot(sph, aes(Patient_ID, Log_Titer)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=min(sph$Log_Titer)), colour = "#990000", linetype="dashed", size = 1.5) + geom_text(aes(label=Env_Titer), vjust=-0.5) + labs(title = "ZIKV Env (Strain: SPH2015) Titers", x = "Patient Label", y = "Log Titer") + coord_cartesian(ylim=c(1,4)) + theme(axis.text.x = element_text(face = "bold", color = "black", size = 12))
d
detach(sph)
ns1one <- read.csv("/Users/Edward/Desktop/BarouchLab/ZMFM NS1 ELISA data 09Dec16 EM.csv", header = T, stringsAsFactors = F)
ns1one
#Only necessary for this particular CSV
ns1one <- ns1one[1:15,1:2]
cals <- c(200, 20, 2)
noms <- c("C3", "C2", "C1")
vals <- rev(ns1one[ns1one$ID == (noms),]$OD)
stdCurve <- cbind(cals, vals)
cal2 <- ns1one[(ns1one$ID == "C2"),]$OD
ns1one$Relative_Ratio <- ns1one$OD/cal2
colnames(ns1one)[2] <- "Patient_ID"
ns1one <- ns1one[rev(rownames(ns1one)),]
ns1one
ns1one$Patient_ID[10:length(ns1one$Patient_ID)] <- gsub('P', 'Pt', ns1one$Patient_ID)
ns1one$Patient_ID[10:length(ns1one$Patient_ID)] <- gsub('P', 'Pt', ns1one$Patient_ID[10:length(ns1one$Patient_ID)])
nse1one
nso1one
ns1one
ns1one <- read.csv("/Users/Edward/Desktop/BarouchLab/ZMFM NS1 ELISA data 09Dec16 EM.csv", header = T, stringsAsFactors = F)
#Only necessary for this particular CSV
ns1one <- ns1one[1:15,1:2]
##
# Standard Curve
##
cals <- c(200, 20, 2)
noms <- c("C3", "C2", "C1")
vals <- rev(ns1one[ns1one$ID == (noms),]$OD)
stdCurve <- cbind(cals, vals)
cal2 <- ns1one[(ns1one$ID == "C2"),]$OD
ns1one$Relative_Ratio <- ns1one$OD/cal2
colnames(ns1one)[2] <- "Patient_ID"
ns1one <- ns1one[rev(rownames(ns1one)),]
ns1one
10:1
ns1one$Patient_ID[10:1] <- gsub('P', 'Pt', ns1one$Patient_ID[10:1])
ns1one
ns1one <- read.csv("/Users/Edward/Desktop/BarouchLab/ZMFM NS1 ELISA data 09Dec16 EM.csv", header = T, stringsAsFactors = F)
#Only necessary for this particular CSV
ns1one <- ns1one[1:15,1:2]
##
# Standard Curve
##
cals <- c(200, 20, 2)
noms <- c("C3", "C2", "C1")
vals <- rev(ns1one[ns1one$ID == (noms),]$OD)
stdCurve <- cbind(cals, vals)
cal2 <- ns1one[(ns1one$ID == "C2"),]$OD
ns1one$Relative_Ratio <- ns1one$OD/cal2
colnames(ns1one)[2] <- "Patient_ID"
ns1one
ns1one$Patient_ID[1:10] <- gsub('P', 'Pt', ns1one$Patient_ID[1:10])
ns1one
ns1one <- ns1one[rev(rownames(ns1one)),]
nse1one
ns1one
ns1one[3:nrow(ns1one),]
ns1one <- ns1one[10:1,]
ns1one
ns1one <- read.csv("/Users/Edward/Desktop/BarouchLab/ZMFM NS1 ELISA data 09Dec16 EM.csv", header = T, stringsAsFactors = F)
#Only necessary for this particular CSV
ns1one <- ns1one[1:15,1:2]
##
# Standard Curve
##
cals <- c(200, 20, 2)
noms <- c("C3", "C2", "C1")
vals <- rev(ns1one[ns1one$ID == (noms),]$OD)
stdCurve <- cbind(cals, vals)
cal2 <- ns1one[(ns1one$ID == "C2"),]$OD
ns1one$Relative_Ratio <- ns1one$OD/cal2
colnames(ns1one)[2] <- "Patient_ID"
ns1one$Patient_ID[1:10] <- gsub('P', 'Pt', ns1one$Patient_ID[1:10])
ns1one <- ns1one[rev(rownames(ns1one)),]
ns1one
row.names(ns1one) <- 1:nrow(ns1one)
ns1
ns1one
ns1one <- ns1one[4:nrow(ns1one),]
ns1one
d <- ggplot(ns1one, aes(Patient_ID, Relative_Ratio)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=0.8), colour = "#990000", linetype="dashed", size = 1.5) + labs(title = "EUROIMMUN ZIKV NS1 Semi-Quantitative ELISA Screen", x = "Patient Label", y = "Relative Ratio") + coord_cartesian(ylim=c(0,3.5)) + theme(axis.text.x = element_text(face = "bold", color = "black", size = 12))
d
sph <- data.frame(c("P9", "P9 Inf", "P10", "P11", "P12", "P13", "P8 Inf V5", "P8 Inf V6", "P9 Inf V2", "P12 AF", "Positive", "Negative"),
c("1:6075", "1:6075", "1:225", "No Response", "1:75", "1:25", "1:6075", "1:6075", "1:6075", "No Response", "1:54675", "1:75"),
c(dil[6], dil[6], dil[3], 0, dil[2], dil[1], dil[6], dil[6], dil[6], 0, dil[8], dil[2]))
colnames(sph) <- c("Patient_ID", "Env_Titer", "Log_Titer")
sph[,3] <- as.numeric(sph[,3])
sph
sph <- data.frame(c("Pt9", "Pt9 Inf", "Pt10", "Pt11", "Pt12", "Pt13", "Pt8InfV5", "Pt8InfV6", "Pt9InfV2", "Pt12AmFlu", "Positive", "Negative"),
c("1:6075", "1:6075", "1:225", "No Response", "1:75", "1:25", "1:6075", "1:6075", "1:6075", "No Response", "1:54675", "1:75"),
c(dil[6], dil[6], dil[3], 0, dil[2], dil[1], dil[6], dil[6], dil[6], 0, dil[8], dil[2]))
colnames(sph) <- c("Patient_ID", "Env_Titer", "Log_Titer")
sph[,3] <- as.numeric(sph[,3])
attach(sph)
neg <- dil[2]
d <- ggplot(sph, aes(Patient_ID, Log_Titer)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=neg), colour = "#990000", linetype="dashed", size = 1.5) + geom_text(aes(label=Env_Titer), vjust=-0.5) + labs(title = "ZIKV Env (Strain: SPH2015) Titers", x = "Patient Label", y = "Log Titer") + coord_cartesian(ylim=c(1,4)) + theme(axis.text.x = element_text(face = "bold", color = "black", size = 12))
d
ns1two <- read.csv("/Users/Edward/Desktop/BarouchLab/ZMFM NS1 ELISA data 22Dec16 EM.csv", header = T, stringsAsFactors = F)
cal2 <- ns1two[(ns1two$ID == "C2"),]$OD
ns1two$Relative_Ratio <- ns1two$OD/cal2
colnames(ns1two)[2] <- "Patient_ID"
ns1two <- ns1two[rev(rownames(ns1two)),]
ns1two
ns1two <- read.csv("/Users/Edward/Desktop/BarouchLab/ZMFM NS1 ELISA data 22Dec16 EM.csv", header = T, stringsAsFactors = F)
cal2 <- ns1two[(ns1two$ID == "C2"),]$OD
ns1two$Relative_Ratio <- ns1two$OD/cal2
colnames(ns1two)[2] <- "Patient_ID"
ns1two <- ns1two[rev(rownames(ns1two)),]
ns1two
ns1two <- read.csv("/Users/Edward/Desktop/BarouchLab/ZMFM NS1 ELISA data 22Dec16 EM.csv", header = T, stringsAsFactors = F)
ns1two
ns1two$X <- NULL
ns1two$X.1 <- NULL
ns1two$X.2 <- NULL
cal2 <- ns1two[(ns1two$ID == "C2"),]$OD
ns1two$Relative_Ratio <- ns1two$OD/cal2
colnames(ns1two)[2] <- "Patient_ID"
ns1two
ns1two <- ns1two[rev(rownames(ns1two)),]
row.names(ns1two) <- 1:nrow(ns1two)
ns1two
ns1two <- ns1two[4:nrow(ns1two),]
attach(ns1two)
detach(sph)
detach(ns1one)
attach(ns1two)
d <- ggplot(ns1two, aes(Patient_ID, Relative_Ratio)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=0.8), colour = "#990000", linetype="dashed", size = 1.5) + labs(title = "EUROIMMUN ZIKV NS1 Semi-Quantitative ELISA Screen", x = "Patient Label", y = "Relative Ratio") + coord_cartesian(ylim=c(0,3.5)) + theme(axis.text.x = element_text(face = "bold", color = "black", size = 12))
d
detach(ns1two)
sph <- data.frame(cbind(c("Pt14V1", "Pt02V3", "Pt03V3", "Pt03V3Inf", "Pt12V3", "Pt10V2", "Pt10V2Inf", "Pt14V2", "Pt14V2Inf", "Pt01V2", "Positive", "Negative"),
c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "1:18225", "1:75"),
c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[1],dil[7], dil[2])), stringsAsFactors = FALSE)
colnames(sph) <- c("Patient_ID", "Env_Titer", "Log_Titer")
sph$Log_Titer <- as.numeric(sph$Log_Titer)
d <- ggplot(sph, aes(Patient_ID, Log_Titer)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=sph[(sph$Patient_ID == "Negative"),]$Log_Titer), colour = "#990000", linetype="dashed", size = 1.5) + geom_text(aes(label=Env_Titer), vjust=-0.5) + labs(title = "ZIKV Env (Strain: SPH2015) Titers", x = "Patient Label", y = "Log Titer") + coord_cartesian(ylim=c(1,4)) + theme(axis.text.x = element_text(face = "bold", color = "black", size = 12))
d
ns1two <- read.csv("/Users/Edward/Desktop/BarouchLab/ZMFM NS1 ELISA data 22Dec16 EM.csv", header = T, stringsAsFactors = F)
ns1two$X <- NULL
ns1two$X.1 <- NULL
ns1two$X.2 <- NULL
cal2 <- ns1two[(ns1two$ID == "C2"),]$OD
ns1two$Relative_Ratio <- ns1two$OD/cal2
colnames(ns1two)[2] <- "Patient_ID"
ns1two <- ns1two[rev(rownames(ns1two)),]
row.names(ns1two) <- 1:nrow(ns1two)
ns1two <- ns1two[4:nrow(ns1two),]
attach(ns1two)
##
#P8 Subset
##
#p8 <- rbind(p8, ns1two[7:8,])
#p8$date <- as.Date(c("03-12-16", "07-12-16", "10-12-16", "11-12-16"), format = "%d-%m-%y")
#attach(p8)
#p8$Patient_ID <- gsub("P8Inf", "", p8$Patient_ID)
#d <- ggplot(p8, aes(date, Relative_Ratio)) + geom_line(size = 1.5) + geom_hline(aes(yintercept=0.8), colour = "#990000", linetype="dashed", size = 1.5) + labs(title = "Patient 8 Infant EUROIMMUN anti-ZIKV NS1 IgG Semi-Quantitative ELISA Results", x = "Month and Day", y = "Relative Ratio") + geom_text(aes(label=Patient_ID), vjust=-0.5) + coord_cartesian(ylim=c(0,4))
d <- ggplot(ns1two, aes(Patient_ID, Relative_Ratio)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=0.8), colour = "#990000", linetype="dashed", size = 1.5) + labs(title = "EUROIMMUN ZIKV NS1 Semi-Quantitative ELISA Screen", x = "Patient Label", y = "Relative Ratio") + coord_cartesian(ylim=c(0,3.5)) + theme(axis.text.x = element_text(face = "bold", color = "black", size = 12))
d
detach(ns1two)
sph <- data.frame(cbind(c("Pt14V1", "Pt02V3", "Pt03V3", "Pt03V3Inf", "Pt12V3", "Pt10V2", "Pt10V2Inf", "Pt14V2", "Pt14V2Inf", "Pt01V2", "Positive", "Negative"),
c("1:2025", "1:54675", "1:2025", "1:6075", "1:75", "1:75", "1:75", "1:2025", "1:2025", "1:25", "1:18225", "1:75"),
c(dil[5],dil[8],dil[5],dil[6],dil[2],dil[2],dil[2],dil[5],dil[5],dil[1],dil[7], dil[2])), stringsAsFactors = FALSE)
colnames(sph) <- c("Patient_ID", "Env_Titer", "Log_Titer")
sph$Log_Titer <- as.numeric(sph$Log_Titer)
d <- ggplot(sph, aes(Patient_ID, Log_Titer)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=sph[(sph$Patient_ID == "Negative"),]$Log_Titer), colour = "#990000", linetype="dashed", size = 1.5) + geom_text(aes(label=Env_Titer), vjust=-0.5) + labs(title = "ZIKV Env (Strain: SPH2015) Titers", x = "Patient Label", y = "Log Titer") + coord_cartesian(ylim=c(1,4)) + theme(axis.text.x = element_text(face = "bold", color = "black", size = 12))
d
ns1one <- read.csv("/Users/Edward/Desktop/BarouchLab/ZMFM NS1 ELISA data 25Jan17.csv", header = T, stringsAsFactors = F)
##
# Standard Curve
##
cals <- c(200, 20, 2)
noms <- c("C3", "C2", "C1")
vals <- rev(ns1one[ns1one$ID == (noms),]$OD)
stdCurve <- as.data.frame(cbind(cals, vals))
cal2 <- ns1one[(ns1one$ID == "C2"),]$OD
ns1one$Relative_Ratio <- ns1one$OD/cal2
colnames(ns1one)[2] <- "Patient_ID"
#ns1one <- ns1one[rev(rownames(ns1one)),]
#ns1one <- ns1one[6:nrow(ns1one),]
ns1one <- ns1one[1:12,]
attach(ns1one)
d <- ggplot(ns1one, aes(Patient_ID, Relative_Ratio)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=0.8), colour = "#990000", linetype="dashed", size = 1.5) + labs(title = "EUROIMMUN ZIKV NS1 Semi-Quantitative ELISA Screen", x = "Patient Label", y = "Relative Ratio") + coord_cartesian(ylim=c(0,3.5)) + theme(axis.text.x = element_text(face = "bold", color = "black", size = 12))
d
ns1one <- read.csv("/Users/Edward/Desktop/BarouchLab/ZMFM NS1 ELISA data 25Jan17.csv", header = T, stringsAsFactors = F)
##
# Standard Curve
##
cals <- c(200, 20, 2)
noms <- c("C3", "C2", "C1")
vals <- rev(ns1one[ns1one$ID == (noms),]$OD)
stdCurve <- as.data.frame(cbind(cals, vals))
cal2 <- ns1one[(ns1one$ID == "C2"),]$OD
ns1one$Relative_Ratio <- ns1one$OD/cal2
colnames(ns1one)[2] <- "Patient_ID"
#ns1one <- ns1one[rev(rownames(ns1one)),]
#ns1one <- ns1one[6:nrow(ns1one),]
ns1one <- ns1one[1:12,]
attach(ns1one)
d <- ggplot(ns1one, aes(Patient_ID, Relative_Ratio)) + geom_bar(stat = "identity") + geom_hline(aes(yintercept=0.8), colour = "#990000", linetype="dashed", size = 1.5) + labs(title = "EUROIMMUN ZIKV NS1 Semi-Quantitative ELISA Screen", x = "Patient Label", y = "Relative Ratio") + coord_cartesian(ylim=c(0,3.5)) + theme(axis.text.x = element_text(face = "bold", color = "black", size = 12))
d
summary(cars)
mtcars
plot(mtcars)
?mtcars
pairs(mtcars, main = "mtcars data")
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ wt | as.factor(am), data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ am | as.factor(am), data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ wt | as.factor(am), data = mtcars, panel = panel.smooth, rows = 1)
coplot(mpg ~ wt | as.factor(am), data = mtcars, panel = panel.smooth, rows = 1, main = "Hello")
?coplot
?mtcars
fit <- lm(mpg ~ am, data = mtcars)
fit
summary
summary(fit)
summary(mtcars)
summary(mtcars$mpg, mtcars$am)
table(summary(mtcars$mpg),summary(mtcars$am))
factor(mtcars$mpg, mtcars$am)
auto
auto <- mtcars[(mtcars$am == 0),]
auto <- mtcars[(mtcars$am == 0),]#0 = automatic
manu <- mtcars[(mtcars$am == 1),]#1 = manual
auto
summary(auto)
summary(auto)$mpg
summary(auto$mpg)
summary(manu$mpg)
fit <- lm(mpg ~ am, data = mtcars)
summary(fit)
plot(mpg ~ am, data = mtcars)
?predict
predict(fit, level = 0.95)
plot(predict(fit, level = 0.95))
abline(predict(fit, level = 0.95))
predict(fit, level = 0.95)
fit
fit <- lm(mpg ~ am, data = mtcars)
summary(fit)
fit <- lm(mpg ~ am, data = mtcars)
summary(fit)$Pr(>|t|)
attr(summary(fit))
str(summary(fit))
coefficients(fit)
fit <- lm(mpg ~ am, data = mtcars)
summary(fit)$Coefficients
fit <- lm(mpg ~ am, data = mtcars)
summary(fit)$coefficients
fit2 <- lm(mpg ~ am + wt, data = mtcars)
summary(fit)$coefficients
fit2 <- lm(mpg ~ am + wt, data = mtcars)
summary(fit2)$coefficients
anova(fit, fit2, test="Chisq")
plot(fit2)
plot(fit)
summary(fit2)$coefficients
anova(fit, fit2, test="Chisq")
summary(fit)$coefficients
summary(auto$mpg)
summary(manu$mpg)
summary(auto$mpg)$Mean -
summary(manu$mpg)$Mean
summary(auto$mpg)$Mean
summary(auto$mpg)$mean
mean(auto$mpg) - mean(manu$mpg)
summary(fit)$coefficients
fit2 <- lm(mpg ~ am + wt, data = mtcars)
summary(fit2)$coefficients
summary(fit)$coefficients
cat(summary(auto$mpg),summary(manu$mpg))
cat(summary(auto$mpg),summary(manu$mpg), sep = '\n')
resid(fit)
plot(resid(fit))
plot(resid(fit)); abline(0)
plot(resid(fit))
getwd()
setwd(paste(getwd(), "Desktop/PracticalMachineLearning", sep = '')
)
setwd(paste(getwd(), "/Desktop/PracticalMachineLearning", sep = '')
)
setwd(paste(getwd(), "/Desktop/PracticalMachineLearning", sep = ''))
getwd()
train <- read.csv("/Users/Edward/Desktop/PracticalMachineLearning/pml-training.csv", header = TRUE)
summary(train)
str(train)
train <- read.csv("/Users/Edward/Desktop/PracticalMachineLearning/pml-training.csv", header = TRUE, stringsAsFactors = FALSE)
str(train)
dim(train)
nrow(train)
ncol(train)
summary(train$classe)
str(train$classe)
factor(train$classe)
table(factor(train$classe))
?createDataPartition
??createDataPartition
library("caret")
install.packages("caret")
install.packages("pbkrtest")
install.packages("installr")
require(installr)
require(caret)
